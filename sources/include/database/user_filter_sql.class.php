<?php

/**
 * Autogenerated file 
 *   This file is part of NOALYSS.
 *
 *   NOALYSS is free software; you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation; either version 2 of the License, or
 *   (at your option) any later version.
 *
 *   NOALYSS is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with NOALYSS; if not, write to the Free Software
 *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 * author : Dec 2017 , Dany De Bontridder (danydb@noalyss.eu)
 */
require_once NOALYSS_INCLUDE.'/lib/noalyss_sql.class.php';
require_once NOALYSS_INCLUDE.'/lib/database.class.php';

/**
 * class_user_filter_sql.php
 *
 * @file
 * @brief abstract of the table public.user_filter 
 */
class User_filter_SQL extends Noalyss_SQL
{

    function __construct(Database $p_cn, $p_id=-1)
    {
        $this->table="public.user_filter";
        $this->primary_key="id";
        /*
         * List of columns
         */
        $this->name=array(
            "id"=>"id"
            , "login"=>"login"
            , "nb_jrn"=>"nb_jrn"
            , "date_start"=>"date_start"
            , "date_end"=>"date_end"
            , "description"=>"description"
            , "amount_min"=>"amount_min"
            , "amount_max"=>"amount_max"
            , "qcode"=>"qcode"
            , "accounting"=>"accounting"
            , "r_jrn"=>"r_jrn"
            , "date_paid_start"=>"date_paid_start"
            , "date_paid_end"=>"date_paid_end"
            , "ledger_type"=>"ledger_type"
            , "all_ledger"=>"all_ledger"
            ,"unpaid"=>"unpaid"
            ,'filter_name'=>"filter_name"
        );
        /*
         * Type of columns
         */
        $this->type=array(
            "id"=>"numeric"
            , "login"=>"text"
            , "nb_jrn"=>"numeric"
            , "date_start"=>"text"
            , "date_end"=>"text"
            , "description"=>"text"
            , "amount_min"=>"numeric"
            , "amount_max"=>"numeric"
            , "qcode"=>"text"
            , "accounting"=>"text"
            , "r_jrn"=>"text"
            , "date_paid_start"=>"text"
            , "date_paid_end"=>"text"
            , "ledger_type"=>"text"
            , "all_ledger"=>"numeric"
            ,"unpaid"=>"text"
            ,"filter_name"=>"text"
        );


        $this->default=array(
            "id"=>"auto"
        );

        $this->date_format="DD.MM.YYYY";
        parent::__construct($p_cn, $p_id);
    }

}
